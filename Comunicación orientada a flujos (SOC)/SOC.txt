¿Cómo funciona una comunicación de flujos? Este es un script de Python, el cual consta de un cliente y un servidor. Vamos a ver primero cómo funciona el servidor. Primeros importa el modelo de shock de Python y creamos un objeto socket al cual especificamos que utilizará el protocolo ipv cuatro y el protocolo de la comunicación de flujos con el método vine. Vinculamos el shock con la dirección IP del servidor, el cual en este caso pues es localhost. Con un puerto de 8000. Luego el servidor espera que un cliente se conecta al shock con el método dicen. Acá abajo tenemos lo que es el bucle principal del servidor, este se ejecuta continuamente mientras el servidor esté en ejecución cuando un cliente se conecta el socket, el método accet espera hasta que se establezca una conexión. Cuando se establece la conexión, se devuelve una nueva tutela que contiene el objeto com y la dirección IP del cliente, la cual es la de héroe. El servidor luego imprime la dirección IP del cliente para indicar que se ha establecido una conexión. Largo del servidor, entra en un bucle interno que leer los datos enviados por el cliente utilizando el método org ve. En este caso estamos leyendo hasta 1024 bytes a la vez, si no se recibe ningún dato, lo que indica que el cliente ha cerrado la conexión, el bucle interno se rompe y el servidor espera hasta que llegue un nuevo cliente. Si se recibe algún dato del cliente, el servidor convierte los datos en mayúsculas utilizando el método ópera y los invitó a los envía de vuelta al cliente utilizando el método central. Ahora vamos a ver lo que es la parte del cliente. Igual sí importa el modelo eso que dice crear un objeto de shock con los métodos del protocolo de ipv cuatro y las comunicaciones de flujos. Aquí le vamos a indicar la, vamos a indicar al socket hacia dónde queremos que haga una conexión en este caso, pues le pasamos la dirección IP que es el local coste igual con el puerto de 8000. Aquí tenemos una variable en las cuales está variable, meses en la que la vamos a guardar una cadena. Esta cadena se la vamos a mandar al socket para que la use el método cenar para que se lo mate al servidor, pero antes se tiene que modificar hábitos para que la pueda leer. Después de enviar el mensaje, el cliente espera una respuesta del servidor utilizando el método advemt. Una vez que hayamos recibido la respuesta, la decodificamos avait si la imprimimos la cadena utilizando el método print. Finalmente, pues cerramos la conexión utilizando el método close del socket. Ahora vamos a ver cómo funciona. Primero corremos el servidor del pitón y aquí pues ya está corriendo. Y ahora vamos a correr lo que es el cliente. Y a cómo podemos ver el mensaje que se mando de hola servidor, pues se regresó en mayúsculas todo. Igual si vamos al script del servidor, podemos ver que nos indica que se estableció una conexión con la dirección IP y también vienen los puertos. Bueno, con esto concluimos la exposición, pues muchas gracias por su atención.